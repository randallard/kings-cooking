name: 🧪 Test Improvement
description: Improve test coverage, quality, or infrastructure
title: "[TEST] "
labels: ["testing", "quality-assurance", "tdd"]
assignees: []

body:
  - type: markdown
    attributes:
      value: |
        ## Test Improvement Task

        Use this template to track improvements to our testing infrastructure, coverage, or test quality.

  - type: input
    id: test-target
    attributes:
      label: Test Target
      description: What area needs better testing?
      placeholder: "e.g., WebRTC connection handling, Chess move validation, Game state synchronization"
    validations:
      required: true

  - type: dropdown
    id: test-type
    attributes:
      label: Test Type Focus
      description: What type of testing needs improvement?
      options:
        - "🔬 Unit Tests (individual functions/components)"
        - "🔗 Integration Tests (component interactions)"
        - "🎭 E2E Tests (user workflows)"
        - "⚡ Performance Tests (load/stress testing)"
        - "🎨 Visual Tests (UI/component appearance)"
        - "🛠️ Test Infrastructure (setup, CI/CD, tooling)"
    validations:
      required: true

  - type: textarea
    id: current-coverage
    attributes:
      label: Current Test Coverage
      description: What's the current state of testing for this area?
      placeholder: |
        ## Current Coverage
        - Unit tests: 45%
        - Integration tests: 20%
        - E2E tests: 10%

        ## Existing Test Quality Issues
        - Tests are slow (>30s)
        - Flaky tests failing intermittently
        - Missing edge case coverage
        - Hard to understand test setup
      value: |
        ## Current Coverage
        - Unit tests:
        - Integration tests:
        - E2E tests:

        ## Existing Test Quality Issues
        -
        -
        -
    validations:
      required: true

  - type: textarea
    id: target-coverage
    attributes:
      label: Target Test Coverage
      description: What coverage goals are you aiming for?
      placeholder: |
        ## Target Coverage Goals
        - Unit tests: 90%+
        - Integration tests: 80%+
        - E2E tests: 70%+

        ## Quality Improvements
        - All tests complete in <10s
        - Zero flaky tests
        - 100% edge case coverage for critical paths
        - Clear, maintainable test code
      value: |
        ## Target Coverage Goals
        - Unit tests:
        - Integration tests:
        - E2E tests:

        ## Quality Improvements
        -
        -
        -
    validations:
      required: true

  - type: textarea
    id: test-scenarios
    attributes:
      label: New Test Scenarios to Add
      description: List specific test cases that need to be written
      placeholder: |
        ## Unit Tests
        - [ ] Valid move validation for each piece type
        - [ ] Invalid move rejection
        - [ ] Edge cases (board boundaries, special moves)

        ## Integration Tests
        - [ ] WebRTC connection establishment
        - [ ] Game state synchronization between peers
        - [ ] Network failure recovery

        ## E2E Tests
        - [ ] Complete game flow from setup to win
        - [ ] Multiplayer game with real network conditions
        - [ ] Mobile responsiveness testing

        ## Performance Tests
        - [ ] Game state updates under load
        - [ ] WebRTC performance with poor network
        - [ ] Memory usage during long games
      value: |
        ## Unit Tests
        - [ ]
        - [ ]

        ## Integration Tests
        - [ ]
        - [ ]

        ## E2E Tests
        - [ ]
        - [ ]

        ## Performance Tests
        - [ ]
        - [ ]
    validations:
      required: true

  - type: textarea
    id: test-infrastructure
    attributes:
      label: Test Infrastructure Improvements
      description: What tooling or infrastructure changes are needed?
      placeholder: |
        - Set up Playwright for E2E testing
        - Configure Vitest for better performance
        - Add visual regression testing
        - Improve CI/CD test pipeline
        - Mock WebRTC for unit testing
        - Test data factories and fixtures

  - type: checkboxes
    id: test-checklist
    attributes:
      label: Test Implementation Checklist
      description: Track progress on test improvements
      options:
        - label: "📊 Current coverage measured and documented"
          required: false
        - label: "🎯 Target coverage goals defined"
          required: false
        - label: "🛠️ Test infrastructure improvements completed"
          required: false
        - label: "🧪 New unit tests written and passing"
          required: false
        - label: "🔗 Integration tests implemented"
          required: false
        - label: "🎭 E2E tests added to test suite"
          required: false
        - label: "⚡ Performance tests baseline established"
          required: false
        - label: "🔄 CI/CD pipeline updated with new tests"
          required: false
        - label: "📚 Test documentation updated"
          required: false
        - label: "✅ All tests passing consistently"
          required: false

  - type: dropdown
    id: priority
    attributes:
      label: Priority
      description: How critical is this test improvement?
      options:
        - "🔥 Critical (production risk without these tests)"
        - "🚨 High (blocking future development)"
        - "📋 Medium (improving confidence and quality)"
        - "🔄 Low (nice to have improvements)"
    validations:
      required: true

  - type: textarea
    id: success-criteria
    attributes:
      label: Success Criteria
      description: How will you know this test improvement is successful?
      placeholder: |
        - Coverage increased from X% to Y%
        - Test execution time reduced by Z%
        - Zero flaky tests in CI
        - All team members can run tests locally
        - Bugs caught in tests before reaching production
      value: |
        -
        -
        -

  - type: textarea
    id: related-issues
    attributes:
      label: Related Issues/PRs
      description: Link to related issues, bugs, or previous test discussions
      placeholder: |
        - Closes #123 (flaky test issue)
        - Related to #456 (performance testing)
        - Follows up on PR #789 (test infrastructure)